{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red28\green0\blue207;\red0\green116\blue0;
}
\margl1440\margr1440\vieww15640\viewh15140\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 #define accel_scale PUTSCALEHERE\
#define gyro_scale PUTSCALEHERE\
\
int\cf0  data[\cf3 9\cf0 ] = \{\cf3 0\cf0 ,\cf3 0\cf0 ,\cf3 0\cf0 ,\cf3 0\cf0 ,\cf3 0\cf0 ,\cf3 0\cf0 ,\cf3 0\cf0 ,\cf3 0\cf0 ,\cf3 0\cf0 \};  \cf4 //m_IMU data\cf2 \
\
int\cf0  i; //variable for for loop\
\
\cf2 int\cf0  main(\cf2 void\cf0 ) \{\
	m_clockdivide(\cf3 1\cf0 );\
	m_usb_init();\
    \
    m_red(ON);\
	\cf2 while\cf0 (!m_imu_init(accel_scale, gyro_scale)); \cf4 //initializes mIMU\cf0 \
    m_red(OFF);\
    \
    \cf2 char\cf0  rx_buffer; \cf4 //computer interactions\cf0 \
\
    \cf2 while\cf0 (\cf3 1\cf0 )\
    \{\
        m_imu_raw(data);  //get imu data\
        \
        \cf2 while\cf0 (!m_usb_rx_available());  	\cf4 //wait for an indication from the computer\cf0 \
        rx_buffer = m_usb_rx_char();  	\cf4 //grab the computer packet\cf0 \
        \
        m_usb_rx_flush();  				\cf4 //clear buffer\cf0 \
        \
        \cf2 if\cf0 (rx_buffer == \cf3 1\cf0 ) \{  			\cf4 //computer wants ir data\cf0 \
            \cf4 //write ir data as concatenated hex:  i.e. f0f1f4f5\cf0 \
            \cf2 for\cf0  (i = \cf3 0\cf0  ; i < \cf3 9\cf0  ; i++)\{\
                m_usb_tx_int(data[i]);\
                m_usb_tx_char(\cf3 '\\t'\cf0 );\
                \}\
            m_usb_tx_char(\cf3 '\\n'\cf0 );  \cf4 //MATLAB serial command reads 1 line at a time\cf0 \
        \}\
\
		\
     \}\
	\cf2 return\cf0  \cf3 0\cf0 ;   \cf4 //never reached\cf0 \
\}\
\
\
\
}